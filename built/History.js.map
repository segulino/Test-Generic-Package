{"version":3,"file":"History.js","sourceRoot":"","sources":["../src/History.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Activity, Message, User, CardActionTypes } from 'botframework-directlinejs';\nimport { ChatState, FormatState, SizeState } from './Store';\nimport { Dispatch, connect } from 'react-redux';\nimport { ActivityView } from './ActivityView';\nimport { classList, doCardAction, IDoCardAction } from './Chat';\nimport * as konsole from './Konsole';\nimport { sendMessage, ChatActions } from './Store';\nimport { activityWithSuggestedActions } from './activityWithSuggestedActions';\nimport { Shell, ShellFunctions } from './Shell';\nimport { giveFeedback } from './api';\n\nconst ic_avatar = require('./assets/ic_avatar@4x.png');\nconst ic_like = require('./assets/ic_like@2x.png');\nconst ic_dislike = require('./assets/ic_dislike@2x.png');\n\nexport interface HistoryProps {\n  format: FormatState,\n  size: SizeState,\n  activities: Activity[],\n  hasActivityWithSuggestedActions: Activity,\n\n  setMeasurements: (carouselMargin: number) => void,\n  onClickRetry: (activity: Activity) => void,\n  onClickCardAction: () => void,\n  onSendPositiveFeedback: () => void,\n  onSendNegativeFeedback: () => void,\n  onMessageFailure: () => void,\n  onReceiveMessage: () => void,\n  isFromMe: (activity: Activity) => boolean,\n  isSelected: (activity: Activity) => boolean,\n  onClickActivity: (activity: Activity) => React.MouseEventHandler<HTMLDivElement>,\n\n  onCardAction: () => void,\n  doCardAction: IDoCardAction\n}\n\nexport class HistoryView extends React.Component<HistoryProps, {}> {\n\n  private shellRef: React.Component & ShellFunctions;\n  private scrollMe: HTMLDivElement;\n  private scrollContent: HTMLDivElement;\n  private scrollToBottom = true;\n\n  private carouselActivity: WrappedActivity;\n  private largeWidth: number;\n\n  constructor(props: HistoryProps) {\n    super(props);\n    document.addEventListener(\"fullscreenchange\", this.changeHandler, false);\n    document.addEventListener(\"webkitfullscreenchange\", this.changeHandler, false);\n    document.addEventListener(\"mozfullscreenchange\", this.changeHandler, false);\n  }\n\n  componentWillUpdate(nextProps: HistoryProps) {\n    //this.autoscroll();\n    let scrollToBottomDetectionTolerance = 1;\n\n    if (!this.props.hasActivityWithSuggestedActions && nextProps.hasActivityWithSuggestedActions) {\n      scrollToBottomDetectionTolerance = 40; // this should be in-sync with $actionsHeight scss var\n    }\n\n    this.scrollToBottom = (Math.abs(this.scrollMe.scrollHeight - this.scrollMe.scrollTop - this.scrollMe.offsetHeight) <= scrollToBottomDetectionTolerance);\n  }\n\n  componentDidUpdate() {\n    if (this.props.format.carouselMargin == undefined) {\n      // After our initial render we need to measure the carousel width\n\n      // Measure the message padding by subtracting the known large width\n      const paddedWidth = measurePaddedWidth(this.carouselActivity.messageDiv) - this.largeWidth;\n\n      // Subtract the padding from the offsetParent's width to get the width of the content\n      const maxContentWidth = (this.carouselActivity.messageDiv.offsetParent as HTMLElement).offsetWidth - paddedWidth;\n\n      // Subtract the content width from the chat width to get the margin.\n      // Next time we need to get the content width (on a resize) we can use this margin to get the maximum content width\n      const carouselMargin = this.props.size.width - maxContentWidth;\n\n      konsole.log('history measureMessage ' + carouselMargin);\n\n      // Finally, save it away in the Store, which will force another re-render\n      this.props.setMeasurements(carouselMargin)\n\n      this.carouselActivity = null; // After the re-render this activity doesn't exist\n    }\n\n    this.autoscroll();\n  }\n\n  private saveShellRef(shellWrapper: any) {\n    if (shellWrapper) {\n      this.shellRef = shellWrapper.getWrappedInstance();\n    }\n  }\n\n  private autoscroll = () => {\n    const vAlignBottomPadding = Math.max(0, measurePaddedHeight(this.scrollMe) - this.scrollContent.offsetHeight);\n    this.scrollContent.style.marginTop = vAlignBottomPadding + 'px';\n\n    const lastActivity = this.props.activities[this.props.activities.length - 1];\n    const lastActivityFromMe = lastActivity && this.props.isFromMe && this.props.isFromMe(lastActivity);\n\n    // Validating if we are at the bottom of the list or the last activity was triggered by the user.\n    if (this.scrollToBottom || lastActivityFromMe) {\n      this.scrollMe.scrollTop = this.scrollMe.scrollHeight - this.scrollMe.offsetHeight;\n    }\n  }\n\n  // In order to do their cool horizontal scrolling thing, Carousels need to know how wide they can be.\n  // So, at startup, we create this mock Carousel activity and measure it.\n  private measurableCarousel = () =>\n    // find the largest possible message size by forcing a width larger than the chat itself\n    <WrappedActivity\n      ref={ x => this.carouselActivity = x }\n      activity={ {\n        type: 'message',\n        id: '',\n        from: { id: '' },\n        attachmentLayout: 'carousel'\n      } }\n      format={ null }\n      fromMe={ false }\n      onClickActivity={ null }\n      onClickRetry={ null }\n      onSendPositiveFeedback={ null }\n      onSendNegativeFeedback={ null }\n      onMessageFailure={ null }\n      onReceiveMessage={ null }\n      selected={ false }\n      showTimestamp={ false }\n    >\n      <div style={ { width: this.largeWidth } }>&nbsp;</div>\n    </WrappedActivity>;\n\n\n\n\n  // At startup we do three render passes:\n  // 1. To determine the dimensions of the chat panel (not much needs to actually render here)\n  // 2. To determine the margins of any given carousel (we just render one mock activity so that we can measure it)\n  // 3. (this is also the normal re-render case) To render without the mock activity\n\n  private doCardAction(type: CardActionTypes, value: string | object) {\n    this.props.onClickCardAction();\n    return this.props.doCardAction(type, value);\n  }\n\n  changeHandler = () => {\n    this.autoscroll();\n  }\n\n  render() {\n    konsole.log(\"History props\", this);\n    let content;\n    let showContentProps = false;\n    let contentProps;\n\n    if (this.props.size.width !== undefined) {\n      if (this.props.format.carouselMargin === undefined) {\n        // For measuring carousels we need a width known to be larger than the chat itself\n        this.largeWidth = this.props.size.width * 2;\n        content = <this.measurableCarousel/>;\n\n        if( this.props.activities && this.props.activities.length > 0){\n          showContentProps = true;\n          contentProps = this.props.activities.map((activity, index) =>\n            <WrappedActivity\n              format={ this.props.format }\n              key={ 'message' + index }\n              activity={ activity }\n              showTimestamp={ index === this.props.activities.length - 1 || (index + 1 < this.props.activities.length && suitableInterval(activity, this.props.activities[index + 1])) }\n              selected={ this.props.isSelected(activity) }\n              fromMe={ this.props.isFromMe(activity) }\n              onClickActivity={ this.props.onClickActivity(activity) }\n              onSendPositiveFeedback={ this.props.onSendPositiveFeedback() }\n              onSendNegativeFeedback={ this.props.onSendNegativeFeedback() }\n              onMessageFailure={ this.props.onMessageFailure() }\n              onReceiveMessage={ this.props.onReceiveMessage() }\n              onClickRetry={ e => {\n                // Since this is a click on an anchor, we need to stop it\n                // from trying to actually follow a (nonexistant) link\n                e.preventDefault();\n                e.stopPropagation();\n                this.props.onClickRetry(activity)\n              } }\n            >\n              <ActivityView\n                format={ this.props.format }\n                size={ this.props.size }\n                activity={ activity }\n                onCardAction={ (type: CardActionTypes, value: string | object) => this.doCardAction(type, value) }\n                onImageLoad={ () => this.autoscroll() }\n              />\n            </WrappedActivity>\n          );\n        }\n\n      } else {\n        showContentProps = false;\n        content = this.props.activities.map((activity, index) =>\n          (activity.type !== 'message' || activity.text || (activity.attachments && activity.attachments.length)) &&\n              <WrappedActivity\n                format={ this.props.format }\n                key={ 'message' + index }\n                activity={ activity }\n                showTimestamp={ index === this.props.activities.length - 1 || (index + 1 < this.props.activities.length && suitableInterval(activity, this.props.activities[index + 1])) }\n                selected={ this.props.isSelected(activity) }\n                fromMe={ this.props.isFromMe(activity) }\n                onClickActivity={ this.props.onClickActivity(activity) }\n                onSendPositiveFeedback={ this.props.onSendPositiveFeedback() }\n                onSendNegativeFeedback={ this.props.onSendNegativeFeedback() }\n                onMessageFailure={ this.props.onMessageFailure() }\n                onReceiveMessage={ this.props.onReceiveMessage() }\n                onClickRetry={ e => {\n                  // Since this is a click on an anchor, we need to stop it\n                  // from trying to actually follow a (nonexistant) link\n                  e.preventDefault();\n                  e.stopPropagation();\n                  this.props.onClickRetry(activity)\n                } }\n              >\n                <ActivityView\n                  format={ this.props.format }\n                  size={ this.props.size }\n                  activity={ activity }\n                  onCardAction={ (type: CardActionTypes, value: string | object) => this.doCardAction(type, value) }\n                  onImageLoad={ () => this.autoscroll() }\n                />\n              </WrappedActivity>\n        );\n      }\n    }\n\n        const groupsClassName = classList('wdrgy-wc-message-groups', !this.props.format.chatTitle && 'no-header');\n\n    return (\n            <div\n                className={ groupsClassName }\n                ref={ div => this.scrollMe = div || this.scrollMe }\n                role=\"log\"\n                tabIndex={ 0 }\n            >\n        <div className=\"wdrgy-wc-message-group-content\" ref={ div => { if (div) this.scrollContent = div }}>\n          { content }\n          { showContentProps &&\n            contentProps\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const History = connect(\n  (state: ChatState) => ({\n    // passed down to HistoryView\n    format: state.format,\n    size: state.size,\n    activities: state.history.activities,\n    hasActivityWithSuggestedActions: !!activityWithSuggestedActions(state.history.activities),\n    // only used to create helper functions below\n    connectionSelectedActivity: state.connection.selectedActivity,\n    selectedActivity: state.history.selectedActivity,\n    botConnection: state.connection.botConnection,\n    user: state.connection.user\n  }), {\n    setMeasurements: (carouselMargin: number) => ({ type: 'Set_Measurements', carouselMargin }),\n    onClickRetry: (activity: Activity) => ({ type: 'Send_Message_Retry', clientActivityId: activity.channelData.clientActivityId }),\n    onClickCardAction: () => ({ type: 'Card_Action_Clicked'}),\n    onSendPositiveFeedback: () => ({\n      type: 'Feedback_Response',\n      activity: {\n        type: \"message\",\n        from: {\n          id: 'bot'\n        },\n        text: '¡ Muchas gracias !',\n        entities: [{'showMessage': true}]}}),\n    onSendNegativeFeedback: () => ({\n      type: 'Feedback_Response',\n      activity: {\n        type: \"message\",\n        from: {\n          id: 'bot'\n        },\n        text: '¡ Muchas gracias !',\n        entities: [{'showMessage': true}]}}),\n    onMessageFailure: () =>({\n      type : 'Message_Failure',\n      activity: {\n        type: \"message\",\n        from: {\n          id: 'bot'\n        },\n        text: 'Oops parece que tenemos problemas con la conexión.\\n\\nPor favor recarga la página e inicia nuevamente la conversación.',\n        entities: [{'showMessage': true}]}}),\n    onReceiveMessage: () =>({ type: 'Recv_Message' }),\n    // only used to create helper functions below\n    sendMessage\n  }, (stateProps: any, dispatchProps: any, ownProps: any): HistoryProps => ({\n    // from stateProps\n    format: stateProps.format,\n    size: stateProps.size,\n    activities: stateProps.activities,\n    hasActivityWithSuggestedActions: stateProps.hasActivityWithSuggestedActions,\n    // from dispatchProps\n    setMeasurements: dispatchProps.setMeasurements,\n    onClickRetry: dispatchProps.onClickRetry,\n    onClickCardAction: dispatchProps.onClickCardAction,\n    onSendPositiveFeedback: () => dispatchProps.onSendPositiveFeedback,\n    onSendNegativeFeedback: () => dispatchProps.onSendNegativeFeedback,\n    onMessageFailure: () => dispatchProps.onMessageFailure,\n    onReceiveMessage: () => dispatchProps.onReceiveMessage,\n    // helper functions\n    doCardAction: doCardAction(stateProps.botConnection, stateProps.user, stateProps.format.locale, dispatchProps.sendMessage),\n    isFromMe: (activity: Activity) => activity.from.id === stateProps.user.id,\n    isSelected: (activity: Activity) => activity === stateProps.selectedActivity,\n        onClickActivity: (activity: Activity) => stateProps.connectionSelectedActivity && (() => stateProps.connectionSelectedActivity.next({ activity })),\n        onCardAction: ownProps.onCardAction\n    }), {\n        withRef: true\n    }\n)(HistoryView);\n\nconst getComputedStyleValues = (el: HTMLElement, stylePropertyNames: string[]) => {\n  const s = window.getComputedStyle(el);\n  const result: { [key: string]: number } = {};\n  stylePropertyNames.forEach(name => result[name] = parseInt(s.getPropertyValue(name)));\n  return result;\n}\n\nconst measurePaddedHeight = (el: HTMLElement): number => {\n  const paddingTop = 'padding-top', paddingBottom = 'padding-bottom';\n  const values = getComputedStyleValues(el, [paddingTop, paddingBottom]);\n  return el.offsetHeight - values[paddingTop] - values[paddingBottom];\n}\n\nconst measurePaddedWidth = (el: HTMLElement): number => {\n  const paddingLeft = 'padding-left', paddingRight = 'padding-right';\n  const values = getComputedStyleValues(el, [paddingLeft, paddingRight]);\n  return el.offsetWidth + values[paddingLeft] + values[paddingRight];\n}\n\nconst suitableInterval = (current: Activity, next: Activity) =>\n  Date.parse(next.timestamp) - Date.parse(current.timestamp) > 5 * 60 * 1000;\n\n\n\n//------------------------------------------------------------------------------\n//-- WrappedActivity class\n//------------------------------------------------------------------------------\nexport interface WrappedActivityProps {\n  activity: Activity,\n  showTimestamp: boolean,\n  selected: boolean,\n  fromMe: boolean,\n  format: FormatState,\n  onClickActivity: React.MouseEventHandler<HTMLDivElement>,\n  onClickRetry: React.MouseEventHandler<HTMLAnchorElement>,\n  onSendPositiveFeedback: any,\n  onSendNegativeFeedback: any,\n  onMessageFailure: any,\n  onReceiveMessage: any,\n  trackable?: boolean\n}\n\nexport class WrappedActivity extends React.Component<WrappedActivityProps, {}> {\n  public messageDiv: HTMLDivElement;\n\n  constructor(props: WrappedActivityProps) {\n    super(props);\n  }\n\n  private sendPositiveFeedback = () => {\n\n    var uid = null;\n    var action = null;\n    var question = null;\n\n    // dispatch action\n    this.props.onSendPositiveFeedback();\n\n    // changing visibility to avatar client message\n    if ( this.props.activity.type === 'message' &&\n         this.props.activity.entities &&\n         this.props.activity.entities.length > 0){\n\n      if( this.props.activity.entities[0].showMessage )\n        this.props.activity.entities[0].showMessage = false;\n\n      if( this.props.activity.entities[0].trackable )\n        this.props.activity.entities[0].trackable = false;\n\n      if( this.props.activity.entities[0].uid )\n          uid = this.props.activity.entities[0].uid;\n\n      if( this.props.activity.entities[0].action )\n          action = this.props.activity.entities[0].action;\n\n      if( this.props.activity.entities[0].action )\n          question = this.props.activity.entities[0].question;\n    }\n\n    // sending to api the feedback action to api\n    var response = giveFeedback({\n                          id: this.props.activity.id,\n                          type: 'like',\n                          uid: uid,\n                          action: action,\n                          question: question\n                        });\n\n    konsole.log('response giveFeedback like', response);\n  };\n\n  private sendNegativeFeedback = () => {\n\n    var uid = null;\n    var action = null;\n    var question = null;\n\n    // dispatch action\n    this.props.onSendNegativeFeedback();\n    // changing visibility to avatar client message\n    if ( this.props.activity.type === 'message' &&\n         this.props.activity.entities &&\n         this.props.activity.entities.length > 0){\n\n      if( this.props.activity.entities[0].showMessage )\n        this.props.activity.entities[0].showMessage = false;\n\n      if( this.props.activity.entities[0].trackable )\n        this.props.activity.entities[0].trackable = false;\n\n      if( this.props.activity.entities[0].uid )\n          uid = this.props.activity.entities[0].uid;\n\n      if( this.props.activity.entities[0].action )\n          action = this.props.activity.entities[0].action;\n\n      if( this.props.activity.entities[0].action )\n          question = this.props.activity.entities[0].question;\n    }\n\n    // sending to api the feedback action to api\n    var response = giveFeedback({\n                          id: this.props.activity.id,\n                          type: 'dislike',\n                          uid: uid,\n                          action: action,\n                          question: question\n                        });\n\n    konsole.log('response giveFeedback dislike', response);\n  };\n\n  private MessageFailure = () => {\n    // dispatch action\n    this.props.onMessageFailure();\n    this.props.onReceiveMessage();\n    this.props.activity.id = \"\";\n  }\n\n  render () {\n    let timeLine: JSX.Element;\n\n    const who = this.props.fromMe ? 'me' : ( this.props.activity.id != '' ? ( this.props.activity.type === 'typing' ? 'typing' : 'bot') : 'init' );\n    const isEntityTrackable = !this.props.fromMe && (this.props.activity.type === 'message' && this.props.activity.entities && this.props.activity.entities[0].trackable);\n    const flagShowBotMessage = (this.props.activity.type === 'message') ?\n            ((this.props.activity.inputHint === 'welcome') ||\n             (this.props.activity.entities && this.props.activity.entities[0].showMessage)) : false;\n    const videoIframe = (this.props.activity.type === 'message' && this.props.activity.entities && this.props.activity.entities[0].videoIframe);\n    const videoUri = (this.props.activity.type === 'message' && this.props.activity.entities && this.props.activity.entities[0].videoUri);\n\n    switch (this.props.activity.id) {\n      case undefined:\n        timeLine = <span>{ this.props.format.strings.messageSending }</span>;\n        break;\n      case null:\n        timeLine = <span>{ this.props.format.strings.messageFailed }</span>;\n        this.MessageFailure();\n        break;\n      case \"retry\":\n        timeLine =\n          <span>\n            { this.props.format.strings.messageFailed }\n            { ' ' }\n            <a href=\".\" onClick={ this.props.onClickRetry }>{ this.props.format.strings.messageRetry }</a>\n          </span>;\n        this.MessageFailure();\n        break;\n      default:\n        let sent: string;\n        if (this.props.showTimestamp)\n          sent = this.props.format.strings.timeSent.replace('%1', (new Date(this.props.activity.timestamp)).toLocaleTimeString());\n        timeLine = <span>{ this.props.activity.from.name || this.props.activity.from.id }{ sent }</span>;\n        timeLine = <span>{ sent }</span>;\n        break;\n    }\n\n    let wrapperClassName\n    if( this.props.fromMe ){\n      wrapperClassName = classList(\n        'wdrgy-wc-message-wrapper-me',\n        (this.props.activity as Message).attachmentLayout || 'list',\n        this.props.onClickActivity && 'clickable'\n      );\n    } else {\n      wrapperClassName = classList(\n        'wdrgy-wc-message-wrapper',\n        (this.props.activity as Message).attachmentLayout || 'list',\n        this.props.onClickActivity && 'clickable'\n      );\n    }\n\n    const contentClassName = classList(\n      'wdrgy-wc-message-content',\n      this.props.selected && 'selected'\n    );\n\n    //formatting dynamic style for bot icon\n    let avatarClassName = 'wdrgy-avatar';\n    if ( !flagShowBotMessage )\n      avatarClassName += '-hidden';\n\n    return (\n        <div data-activity-id={ this.props.activity.id } className={ wrapperClassName } onClick={ this.props.onClickActivity } >\n          <div className={ 'wdrgy-wc-message wdrgy-wc-message-from-' + who } ref={ div => this.messageDiv = div }>\n            {\n              who === 'bot' &&\n              <img className={avatarClassName} src={ic_avatar} alt=\"avatar\" />\n            }\n            <div className={ contentClassName }>\n              {\n                ((who === 'bot' || who === 'me' ) && !videoIframe )  &&\n                  this.props.children\n              }\n              {\n                (who === 'bot' && videoIframe)  &&\n                <div>\n                  <div className=\"wc-list\">\n                    <div className=\"wc-card wc-adaptive-card video\">\n                      <div className=\"non-adaptive-content\">\n                        <iframe allowFullScreen src={videoUri} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              }\n              {\n                who === 'typing' &&\n                  <div className=\"wdrgy-wc-typing\"/>\n              }\n            </div>\n          </div >\n          <div className={'wdrgy-wc-message-bottom-' + who}>\n          {\n            who === 'me'  &&\n            <div className=\"wdrgy-triangle-topright\"></div>\n          }\n          {\n            who === 'bot' && !videoIframe && flagShowBotMessage &&\n            <div className=\"wdrgy-triangle-topleft\"></div>\n          }\n          {\n            isEntityTrackable &&\n            <div className={ 'wdrgy-wc-message-from-feedback' }>\n              <div className=\"wdrgy-feedback\">\n                <span className=\"wdrgy-wc-message-from wdrgy-wc-message-from-feedback\">¿Resolví tu consulta?</span>\n              </div>\n              <div className=\"wdrgy-feedback\">\n                <button className=\"wdrgy-feedback-button\" onClick={this.sendPositiveFeedback}>\n                  <img src={ic_like} className=\"wdrgy-feedback-icon\" alt=\"like\" />\n                </button>\n              </div>\n              <div className=\"wdrgy-feedback\">\n                <button className=\"wdrgy-feedback-button\" onClick={this.sendNegativeFeedback}>\n                  <img src={ic_dislike} className=\"wdrgy-feedback-icon\" alt=\"dislike\" />\n                </button>\n              </div>\n            </div>\n        }\n        </div>\n      </div>\n    );\n}\n\n\n}\n"]}