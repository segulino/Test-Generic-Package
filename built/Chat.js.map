{"version":3,"file":"Chat.js","sourceRoot":"","sources":["../src/Chat.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport axios from 'axios';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Activity, IBotConnection, User, DirectLine, DirectLineOptions, CardActionTypes } from 'botframework-directlinejs';\nimport { createStore, ChatActions, sendMessage, resetActivities, showActionsPanel, setActions, hideActionsPanel } from './Store';\nimport { Provider } from 'react-redux';\nimport { SpeechOptions } from './SpeechOptions';\nimport { Speech } from './SpeechModule';\nimport { ActivityOrID, FormatOptions } from './Types';\nimport * as konsole from './Konsole';\nimport { getTabIndex } from './getTabIndex';\n\n\nconst ic_utility = require('./assets/ic_utility_header@1x.png');\nconst ic_close = require('./assets/ic_close@1x.png');\nconst ic_minimize = require('./assets/ic_minimize@1x.png');\nconst ic_chatbox = require('./assets/chatbox@1x.png');\nconst ic_frequent_questions_active = require('./assets/ic_frequents_questions_active@1x.png');\nconst ic_frequent_questions_inactive = require('./assets/ic_frequents_questions_inactive@1x.png');\nconst ic_videoChat = require('./assets/ic_videoChat@1x.png');\n\nexport interface WdrgyUser {\n  id: number,\n  first_name: string,\n  last_name: string,\n  email: string\n}\n\nexport interface WdrgyAccount {\n  id: number,\n  client_number: string\n}\n\nexport interface WdrgySessionToken {\n  sessionToken: string\n}\n\nexport interface ChatProps {\n  adaptiveCardsHostConfig: any,\n  chatTitle?: boolean | string,\n  native?: boolean,\n  user: User,\n  bot: User,\n  botConnection?: IBotConnection,\n  directLine?: DirectLineOptions,\n  speechOptions?: SpeechOptions,\n  locale?: string,\n  selectedActivity?: BehaviorSubject<ActivityOrID>,\n  sendTyping?: boolean,\n  showUploadButton?: boolean,\n  formatOptions?: FormatOptions,\n  resize?: 'none' | 'window' | 'detect',\n  wdrgyUser: WdrgyUser,\n  wdrgyAccount: WdrgyAccount,\n  wdrgySessionToken: WdrgySessionToken,\n\n  hideActionsPanel: () => void,\n  toggleVideoChat: () => void\n}\n\nimport { History } from './History';\nimport { MessagePane } from './MessagePane';\nimport { Shell, ShellFunctions } from './Shell';\nimport FrequentActionsPane from './FrequentActions';\nimport InnerPanel from './InnerPanel';\nimport { getActions, getToken } from './api';\n\nexport class Chat extends React.Component<ChatProps, { showChat: boolean }> {\n\n  private store = createStore();\n\n  private botConnection: IBotConnection;\n\n  private activitySubscription: Subscription;\n  private connectionStatusSubscription: Subscription;\n  private selectedActivitySubscription: Subscription;\n  private shellRef: React.Component & ShellFunctions;\n  private historyRef: React.Component;\n  private chatviewPanelRef: HTMLElement;\n\n  private resizeListener = () => this.setSize();\n\n  private _handleCardAction = this.handleCardAction.bind(this);\n  private _handleKeyDownCapture = this.handleKeyDownCapture.bind(this);\n  private _saveChatviewPanelRef = this.saveChatviewPanelRef.bind(this);\n  private _saveHistoryRef = this.saveHistoryRef.bind(this);\n  private _saveShellRef = this.saveShellRef.bind(this);\n\n  constructor(props: ChatProps) {\n    super(props);\n\n    konsole.log(\"BotChat.Chat props\", props);\n    this.state ={ showChat: this.props.native };\n\n    this.store.dispatch<ChatActions>({\n      type: 'Set_Locale',\n      locale: props.locale || (window.navigator as any)[\"userLanguage\"] || window.navigator.language || 'en'\n    });\n\n        if (props.adaptiveCardsHostConfig) {\n            this.store.dispatch<ChatActions>({\n                type: 'Set_AdaptiveCardsHostConfig',\n                payload: props.adaptiveCardsHostConfig\n            });\n        }\n\n        let { chatTitle } = props;\n\n        if (props.formatOptions) {\n            console.warn('DEPRECATED: \"formatOptions.showHeader\" is deprecated, use \"chatTitle\" instead. See https://github.com/Microsoft/BotFramework-WebChat/blob/master/CHANGELOG.md#formatoptionsshowheader-is-deprecated-use-chattitle-instead.');\n\n            if (typeof props.formatOptions.showHeader !== 'undefined' && typeof props.chatTitle === 'undefined') {\n                chatTitle = props.formatOptions.showHeader;\n            }\n        }\n\n        if (typeof chatTitle !== 'undefined') {\n            this.store.dispatch<ChatActions>({ type: 'Set_Chat_Title', chatTitle });\n        }\n\n        this.store.dispatch<ChatActions>({ type: 'Toggle_Upload_Button', showUploadButton: props.showUploadButton });\n\n        if (props.sendTyping) {\n      this.store.dispatch<ChatActions>({ type: 'Set_Send_Typing', sendTyping: props.sendTyping });\n        }\n\n    if (props.speechOptions) {\n      Speech.SpeechRecognizer.setSpeechRecognizer(props.speechOptions.speechRecognizer);\n      Speech.SpeechSynthesizer.setSpeechSynthesizer(props.speechOptions.speechSynthesizer);\n    }\n\n    getActions().then((response) => {\n      const actions = response.data.body;\n      this.store.dispatch(setActions(actions.persistent_menu, actions.persistent_options));\n    });\n  }\n\n  private handleIncomingActivity(activity: Activity) {\n    let state = this.store.getState();\n    switch (activity.type) {\n      case \"message\":\n        if(activity.from.id !== state.connection.user.id)\n          this.store.dispatch<ChatActions>({ type: 'Recv_Message' });\n\n        this.store.dispatch<ChatActions>({ type: activity.from.id === state.connection.user.id ? 'Receive_Sent_Message' : 'Receive_Message', activity });\n\n        if(this.shellRef)\n          this.shellRef.focus();\n        break;\n\n      case \"typing\":\n        if (activity.from.id !== state.connection.user.id)\n          this.store.dispatch<ChatActions>({ type: 'Show_Typing', activity });\n        break;\n    }\n  }\n\n  private setSize() {\n    this.store.dispatch<ChatActions>({\n      type: 'Set_Size',\n            width: this.chatviewPanelRef.offsetWidth,\n            height: this.chatviewPanelRef.offsetHeight\n    });\n  }\n\n  private showWelcomeMessage() {\n    this.store.dispatch<ChatActions>({\n      type: 'Receive_Message',\n      activity: {\n        type: \"message\",\n        from: {\n          id: 'bot'\n        },\n        text: \"Hola soy un **asistente virtual**. ¿Cómo puedo ayudarte?\",\n        entities: [{'showMessage': true}],\n        fromMe: false\n      }\n    });\n  }\n\n    private handleCardAction() {\n        // After the user click on any card action, we will \"blur\" the focus, by setting focus on message pane\n        // This is for after click on card action, the user press \"A\", it should go into the chat box\n        const historyDOM = findDOMNode(this.historyRef) as HTMLElement;\n\n        if (historyDOM) {\n            historyDOM.focus();\n        }\n    }\n\n  private handleKeyDownCapture(evt: React.KeyboardEvent<HTMLDivElement>) {\n    const target = evt.target as HTMLElement;\n    const tabIndex = getTabIndex(target);\n\n    if (\n            evt.altKey\n            || evt.ctrlKey\n            || evt.metaKey\n            || (!inputtableKey(evt.key) && evt.key !== 'Backspace')\n        ) {\n            // Ignore if one of the utility key (except SHIFT) is pressed\n            // E.g. CTRL-C on a link in one of the message should not jump to chat box\n            // E.g. \"A\" or \"Backspace\" should jump to chat box\n            return;\n        }\n\n        if (\n            target === findDOMNode(this.historyRef)\n      || typeof tabIndex !== 'number'\n      || tabIndex < 0\n    ) {\n      evt.stopPropagation();\n\n      let key: string;\n\n      // Quirks: onKeyDown we re-focus, but the newly focused element does not receive the subsequent onKeyPress event\n      //         It is working in Chrome/Firefox/IE, confirmed not working in Edge/16\n      //         So we are manually appending the key if they can be inputted in the box\n      if (/(^|\\s)Edge\\/16\\./.test(navigator.userAgent)) {\n        key = inputtableKey(evt.key);\n      }\n\n      this.shellRef.focus(key);\n    }\n  }\n\n  private saveChatviewPanelRef(chatviewPanelRef: HTMLElement) {\n      this.chatviewPanelRef = chatviewPanelRef;\n  }\n\n  private saveHistoryRef(historyWrapper: any) {\n      this.historyRef = historyWrapper && historyWrapper.getWrappedInstance();\n  }\n\n  private saveShellRef(shellWrapper: any) {\n    if (shellWrapper) {\n      this.shellRef = shellWrapper.getWrappedInstance();\n    }\n  }\n\n  private toggleChat = () => {\n    this.setState(prevState => ({\n      showChat: !prevState.showChat\n    }));\n  }\n\n  private toggleFrequentActions = () => {\n    this.store.dispatch(hideActionsPanel());\n  }\n\n  private toggleVideoChat = () => {\n    this.props.toggleVideoChat();\n  }\n\n  private resetChat = () => {\n    this.toggleChat();\n    this.store.dispatch(resetActivities());\n    this.store.dispatch(showActionsPanel());\n  }\n\n  private createConnectionWithToken(){\n    return getToken().then((response => {\n      this.props.directLine.token = response.data.body.token;\n      this.createConnection();\n    }));\n  }\n\n  private createConnection(){\n    const botConnection = this.props.directLine ?\n          (this.botConnection = new DirectLine(this.props.directLine)) :\n          this.props.botConnection;\n\n    if (this.props.resize === 'window')\n        window.addEventListener('resize', this.resizeListener);\n\n    this.store.dispatch<ChatActions>({ type: 'Start_Connection', user: this.props.user, bot: this.props.bot, botConnection, selectedActivity: this.props.selectedActivity });\n\n    this.connectionStatusSubscription = botConnection.connectionStatus$.subscribe(connectionStatus =>{\n      if(this.props.speechOptions && this.props.speechOptions.speechRecognizer){\n        let refGrammarId = botConnection.referenceGrammarId;\n        if(refGrammarId)\n          this.props.speechOptions.speechRecognizer.referenceGrammarId = refGrammarId;\n      }\n      this.store.dispatch<ChatActions>({ type: 'Connection_Change', connectionStatus })\n    });\n\n    this.activitySubscription = botConnection.activity$.subscribe(\n      activity => this.handleIncomingActivity(activity),\n      error => konsole.log(\"activity$ error\", error)\n    );\n\n    if (this.props.selectedActivity) {\n      this.selectedActivitySubscription = this.props.selectedActivity.subscribe(activityOrID => {\n        this.store.dispatch<ChatActions>({\n          type: 'Select_Activity',\n          selectedActivity: activityOrID.activity || this.store.getState().history.activities.find(activity => activity.id === activityOrID.id)\n        });\n      });\n    }\n\n    this.showWelcomeMessage();\n  }\n\n  componentDidMount() {\n\n    // Now that we're mounted, we know our dimensions. Put them in the store (this will force a re-render)\n    this.setSize();\n\n    /*\n    // If exists secret proceed to get Token\n    if(this.props.directLine && this.props.directLine.secret && this.props.directLine.token !== null){\n      this.createConnection();\n    } else {\n      this.createConnectionWithToken();\n    }\n    */\n\n    // If exists token proceed to get Token\n    if(this.props.directLine && this.props.directLine.token === null){\n      this.createConnectionWithToken().then(() => {\n        /*this.botConnection.postActivity({\n          from: { id: 'me' },\n          name: 'updateUgoDataUser',\n          type: 'event',\n          value: {\n            ugoToken: this.props.wdrgySessionToken.sessionToken,\n            videoChatAvailable: true\n          }\n        }).subscribe((id) => {\n          console.log('\"token data sent\"');\n        });*/\n\n        this.botConnection.postActivity({\n          from: { id: 'me' },\n          name: 'updateUgoDataUser',\n          type: 'event',\n          value: {\n            ugoAccountId: this.props.wdrgyAccount.id,\n            ugoAccountClientNumber: this.props.wdrgyAccount.client_number,\n            ugoName: this.props.wdrgyUser.first_name,\n            ugoLastname: this.props.wdrgyUser.last_name,\n            ugoEmail: this.props.wdrgyUser.email,\n            ugoToken: this.props.wdrgySessionToken.sessionToken,\n            videoChatAvailable: true\n          }\n        }).subscribe(function () {\n          console.log('\"user data sent\"');\n        });\n      });\n   } else if(this.props.botConnection || this.props.directLine){\n     this.createConnection();\n   }\n  }\n\n  componentWillUnmount() {\n    if (this.connectionStatusSubscription)\n      this.connectionStatusSubscription.unsubscribe();\n    if (this.activitySubscription)\n      this.activitySubscription.unsubscribe();\n    if (this.selectedActivitySubscription)\n      this.selectedActivitySubscription.unsubscribe();\n    if (this.botConnection)\n      this.botConnection.end();\n    window.removeEventListener('resize', this.resizeListener);\n  }\n\n  componentWillReceiveProps(nextProps: ChatProps) {\n    if (this.props.adaptiveCardsHostConfig !== nextProps.adaptiveCardsHostConfig) {\n      this.store.dispatch<ChatActions>({\n        type: 'Set_AdaptiveCardsHostConfig',\n        payload: nextProps.adaptiveCardsHostConfig\n      });\n    }\n\n    if (this.props.showUploadButton !== nextProps.showUploadButton) {\n      this.store.dispatch<ChatActions>({\n        type: 'Toggle_Upload_Button',\n        showUploadButton: nextProps.showUploadButton\n      });\n    }\n\n    if (this.props.chatTitle !== nextProps.chatTitle) {\n      this.store.dispatch<ChatActions>({\n        type: 'Set_Chat_Title',\n        chatTitle: nextProps.chatTitle\n      });\n    }\n\n    if (this.props.wdrgyAccount && nextProps.wdrgyAccount &&\n        this.props.wdrgyAccount.id !== nextProps.wdrgyAccount.id && this.botConnection) {\n      this.botConnection.postActivity({\n        from: { id: 'me' },\n        name: 'updateUgoDataUser',\n        type: 'event',\n        value: {\n          ugoAccountId: nextProps.wdrgyAccount.id,\n          ugoAccountClientNumber: nextProps.wdrgyAccount.client_number\n        }\n      }).subscribe(function (id) {\n        console.log('\"account data sent\"');\n      });\n    }\n  }\n\n  // At startup we do three render passes:\n  // 1. To determine the dimensions of the chat panel (nothing needs to actually render here, so we don't)\n  // 2. To determine the margins of any given carousel (we just render one mock activity so that we can measure it)\n  // 3. (this is also the normal re-render case) To render without the mock activity\n\n  render() {\n    const state = this.store.getState();\n    konsole.log(\"BotChat.Chat state\", state);\n\n    // only render real stuff after we know our dimensions\n    let header: JSX.Element;\n    //if (state.format.options.showHeader) {\n      header = (\n        <div className=\"wdrgy-wc-header-group\" >\n          <div className=\"wdrgy-wc-header\">\n            <div className=\"wdrgy-brand\">\n                <span className=\"wdrgy-utilityco-brand\">Utility CO</span>\n            </div>\n            {\n              !this.props.native &&\n              <div className=\"wdrgy-icons\">\n                <button type=\"button\" className=\"wdrgy-close-button\" onClick={this.toggleChat}>\n                  <img className=\"wdrgy-close wdrgy-minimize\" src={ic_minimize} alt=\"minimize\" />\n                </button>\n                <button type=\"button\" className=\"wdrgy-close-button\" onClick={this.resetChat}>\n                  <img className=\"wdrgy-close\" src={ic_close} alt=\"close\" />\n                </button>\n              </div>\n            }\n          </div>\n          <div className=\"wdrgy-wc-button-bar\">\n            <div className=\"wdrgy-icons\">\n              <button type=\"button\" className=\"wdrgy-close-button\" onClick={this.toggleVideoChat}>\n                <img className=\"wdrgy-close\" src={ic_videoChat} alt=\"video chat\" title=\"video chat\" />\n              </button>\n              <button type=\"button\" className=\"wdrgy-close-button\" onClick={this.toggleFrequentActions}>\n                <img className=\"wdrgy-close\" src={ic_frequent_questions_active} alt=\"preguntas frecuentes\" title=\"preguntas frecuentes\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    //}\n\n    let resize: JSX.Element;\n    if (this.props.resize === 'detect')\n      resize = <ResizeDetector onresize={ this.resizeListener } />;\n\n    return (\n      <Provider store={ this.store }>\n        <div\n          className={`wdrgy-wc-chatview-panel ${ this.state.showChat ? \"\" : \"chat-closed\"}`}\n          onKeyDownCapture={ this._handleKeyDownCapture }\n                    ref={ this._saveChatviewPanelRef }\n        >\n          {\n            !this.state.showChat &&\n            <button className=\"wdrgy-launcher\" onClick={this.toggleChat}>\n              <img src={ic_chatbox} />\n            </button>\n          }\n          {\n            this.state.showChat &&\n            <div>\n              { header }\n              <MessagePane>\n                <History\n                  onCardAction={ this._handleCardAction }\n                  ref={ this._saveHistoryRef }\n                />\n              </MessagePane>\n              <InnerPanel />\n              <Shell ref={ this._saveShellRef } />\n              {\n              this.props.resize === 'detect' &&\n              <ResizeDetector onresize={ this.resizeListener } />\n              }\n              <FrequentActionsPane />\n            </div>\n          }\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport interface IDoCardAction {\n  (type: CardActionTypes, value: string | object): void;\n}\n\nexport const doCardAction = (\n  botConnection: IBotConnection,\n  from: User,\n  locale: string,\n    sendMessage: (value: string, user: User, locale: string) => void,\n): IDoCardAction => (\n  type,\n  actionValue\n) => {\n\n  const text = (typeof actionValue === 'string') ? actionValue as string : undefined;\n  const value = (typeof actionValue === 'object')? actionValue as object : undefined;\n\n  switch (type) {\n    case \"imBack\":\n            if (typeof text === 'string')\n        sendMessage(text, from, locale);\n      break;\n\n    case \"postBack\":\n      sendPostBack(botConnection, text, value, from, locale);\n      break;\n\n    case \"call\":\n    case \"openUrl\":\n    case \"playAudio\":\n    case \"playVideo\":\n    case \"showImage\":\n    case \"downloadFile\":\n    case \"signin\":\n      window.open(text);\n      break;\n\n    default:\n      konsole.log(\"unknown button type\", type);\n    }\n}\n\nexport const sendPostBack = (botConnection: IBotConnection, text: string, value: object, from: User, locale: string) => {\n  botConnection.postActivity({\n    type: \"message\",\n    text,\n    value,\n    from,\n    locale\n  })\n  .subscribe(id => {\n    konsole.log(\"success sending postBack\", id)\n  }, error => {\n    konsole.log(\"failed to send postBack\", error);\n  });\n}\n\nexport const renderIfNonempty = (value: any, renderer: (value: any) => JSX.Element ) => {\n  if (value !== undefined && value !== null && (typeof value !== 'string' || value.length > 0))\n    return renderer(value);\n}\n\nexport const classList = (...args:(string | boolean)[]) => {\n  return args.filter(Boolean).join(' ');\n}\n\n// note: container of this element must have CSS position of either absolute or relative\nconst ResizeDetector = (props: {\n  onresize: () => void\n}) =>\n  // adapted to React from https://github.com/developit/simple-element-resize-detector\n  <iframe\n    style={ { position: 'absolute', left: '0', top: '0', width: '100%', height: '100%', margin: '1px 0 0', border: 'none', opacity: 0, visibility: 'hidden', pointerEvents: 'none' } }\n    ref={ frame => {\n      if (frame)\n        frame.contentWindow.onresize = props.onresize;\n    } }\n  />;\n\n// For auto-focus in some browsers, we synthetically insert keys into the chatbox.\n// By default, we insert keys when:\n// 1. evt.key.length === 1 (e.g. \"1\", \"A\", \"=\" keys), or\n// 2. evt.key is one of the map keys below (e.g. \"Add\" will insert \"+\", \"Decimal\" will insert \".\")\nconst INPUTTABLE_KEY: { [key: string]: string } = {\n  Add: '+',      // Numpad add key\n  Decimal: '.',  // Numpad decimal key\n  Divide: '/',   // Numpad divide key\n  Multiply: '*', // Numpad multiply key\n  Subtract: '-'  // Numpad subtract key\n};\n\nfunction inputtableKey(key: string) {\n  return key.length === 1 ? key : INPUTTABLE_KEY[key];\n}\n"]}