{"version":3,"file":"Shell.js","sourceRoot":"","sources":["../src/Shell.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ChatState, FormatState } from './Store';\nimport { User } from 'botframework-directlinejs';\nimport { classList } from './Chat';\nimport { Dispatch, connect } from 'react-redux';\nimport { Strings } from './Strings';\nimport { Speech } from './SpeechModule'\nimport { ChatActions, ListeningState, sendMessage, showTyping, sendFiles } from './Store';\nimport Menu from './Menu';\n\nconst ic_send = require('./assets/ic_send_arrow_blue@2x.png');\nconst ic_attach = require('./assets/ic_attach@2x.png');\n\ninterface Props {\n  inputText: string,\n  strings: Strings,\n  listeningState: ListeningState,\n  processingMessage: true,\n  showUploadButton: boolean\n\n  onChangeText: (inputText: string) => void\n\n  sendMessage: (inputText: string) => void,\n  sendFiles: (files: FileList) => void,\n  stopListening: () => void,\n  startListening: () => void\n  showTyping: () => void\n}\n\nexport interface ShellFunctions {\n  focus: (appendKey?: string) => void\n}\n\nclass ShellContainer extends React.Component<Props> implements ShellFunctions {\n  private textInput: HTMLInputElement;\n  private fileInput: HTMLInputElement;\n\n  private sendMessage() {\n        if (this.props.inputText.trim().length > 0) {\n      this.props.sendMessage(this.props.inputText);\n      this.focus();\n    }\n  }\n\n    private handleSendButtonKeyPress(evt: React.KeyboardEvent<HTMLButtonElement>) {\n        if (evt.key === 'Enter' || evt.key === ' ') {\n            evt.preventDefault();\n            this.sendMessage();\n            this.textInput.focus();\n        }\n    }\n\n    private handleUploadButtonKeyPress(evt: React.KeyboardEvent<HTMLLabelElement>) {\n        if (evt.key === 'Enter' || evt.key === ' ') {\n            evt.preventDefault();\n            this.fileInput.click();\n        }\n    }\n\n  private onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n    if (e.key === 'Enter') {\n      this.sendMessage();\n    }\n  }\n\n  private onClickSend() {\n    this.sendMessage();\n  }\n\n  private onChangeFile() {\n    this.props.sendFiles(this.fileInput.files);\n    this.fileInput.value = null;\n    this.textInput.focus();\n  }\n\n    private onTextInputFocus(){\n        if (this.props.listeningState === ListeningState.STARTED) {\n      this.props.stopListening();\n    }\n  }\n\n  private onClickMic() {\n        if (this.props.listeningState === ListeningState.STARTED) {\n      this.props.stopListening();\n        } else if (this.props.listeningState === ListeningState.STOPPED) {\n      this.props.startListening();\n    }\n  }\n\n  public focus(appendKey?: string) {\n    this.textInput.focus();\n\n    if (appendKey) {\n      this.props.onChangeText(this.props.inputText + appendKey);\n    }\n  }\n\n  render() {\n    const className = classList(\n      'wdrgy-wc-console',\n      this.props.inputText.length > 0 && 'has-text',\n      this.props.showUploadButton && 'has-upload-button'\n    );\n\n    const showMicButton = this.props.listeningState !== ListeningState.STOPPED || (Speech.SpeechRecognizer.speechIsAvailable()  && !this.props.inputText.length);\n\n    const sendButtonClassName = classList(\n      'wdrgy-wc-send',\n      'wdrgy-align-center',\n      showMicButton && 'hidden'\n    );\n\n    const micButtonClassName = classList(\n      'wdrgy-wc-mic',\n      !showMicButton && 'hidden',\n            this.props.listeningState === ListeningState.STARTED && 'active',\n            this.props.listeningState !== ListeningState.STARTED && 'inactive'\n    );\n\n    const placeholder = this.props.listeningState === ListeningState.STARTED ? this.props.strings.listeningIndicator : this.props.strings.consolePlaceholder;\n\n    return (\n      <div className=\"wdrgy-wc-shell-panel-group\">\n        {\n          this.props.processingMessage &&\n            <div className=\"wdrgy-wc-indicator\">\n              <div className=\"wdrgy-progress\">\n                <div className=\"wdrgy-progress-bar\">\n                </div>\n              </div>\n            </div>\n        }\n        <div className={className}>\n          <Menu />\n          {\n          /*\n          this.props.showUploadButton &&\n          <label\n          className=\"wc-upload\"\n          htmlFor=\"wc-upload-input\"\n          onKeyPress={ evt => this.handleUploadButtonKeyPress(evt) }\n          tabIndex={ 0 } >\n          <svg>\n            <path d=\"M19.96 4.79m-2 0a2 2 0 0 1 4 0 2 2 0 0 1-4 0zM8.32 4.19L2.5 15.53 22.45 15.53 17.46 8.56 14.42 11.18 8.32 4.19ZM1.04 1L1.04 17 24.96 17 24.96 1 1.04 1ZM1.03 0L24.96 0C25.54 0 26 0.45 26 0.99L26 17.01C26 17.55 25.53 18 24.96 18L1.03 18C0.46 18 0 17.55 0 17.01L0 0.99C0 0.45 0.47 0 1.03 0Z\" />\n          </svg>\n          </label>\n          */\n          }\n          {\n          /*\n          this.props.showUploadButton &&\n          <input\n            id=\"wc-upload-input\"\n            tabIndex={ -1 }\n            type=\"file\"\n            ref={ input => this.fileInput = input }\n            multiple\n            onChange={ () => this.onChangeFile() }\n            aria-label={ this.props.strings.uploadFile }\n            role=\"button\"\n          />\n          */\n          }\n          <input\n              type=\"text\"\n              className=\"wdrgy-wc-shellinput\"\n              ref={ input => this.textInput = input }\n              disabled={this.props.processingMessage}\n              autoFocus\n              value={ this.props.inputText }\n              onChange={ _ => this.props.onChangeText(this.textInput.value) }\n              onKeyPress={ e => this.onKeyPress(e) }\n              onFocus={ () => this.onTextInputFocus() }\n              placeholder={ placeholder }\n              aria-label={ this.props.inputText ? null : placeholder }\n              aria-live=\"polite\"\n          />\n          {\n          this.props.inputText !== '' &&\n          <label\n            className={sendButtonClassName}\n            onClick={ () => this.onClickSend() } >\n            <img className=\"wdrgy-console-icon\" src={ic_send} alt=\"send\" />\n          </label>\n          }\n          {\n          /*\n          <button\n            className={ micButtonClassName }\n            onClick={ () => this.onClickMic() }\n            aria-label={ this.props.strings.speak }\n            role=\"button\"\n            tabIndex={ 0 }\n            type=\"button\"\n          >\n          <svg width=\"28\" height=\"22\" viewBox=\"0 0 58 58\" >\n            <path d=\"M 44 28 C 43.448 28 43 28.447 43 29 L 43 35 C 43 42.72 36.72 49 29 49 C 21.28 49 15 42.72 15 35 L 15 29 C 15 28.447 14.552 28 14 28 C 13.448 28 13 28.447 13 29 L 13 35 C 13 43.485 19.644 50.429 28 50.949 L 28 56 L 23 56 C 22.448 56 22 56.447 22 57 C 22 57.553 22.448 58 23 58 L 35 58 C 35.552 58 36 57.553 36 57 C 36 56.447 35.552 56 35 56 L 30 56 L 30 50.949 C 38.356 50.429 45 43.484 45 35 L 45 29 C 45 28.447 44.552 28 44 28 Z\"/>\n            <path id=\"micFilling\" d=\"M 28.97 44.438 L 28.97 44.438 C 23.773 44.438 19.521 40.033 19.521 34.649 L 19.521 11.156 C 19.521 5.772 23.773 1.368 28.97 1.368 L 28.97 1.368 C 34.166 1.368 38.418 5.772 38.418 11.156 L 38.418 34.649 C 38.418 40.033 34.166 44.438 28.97 44.438 Z\"/>\n            <path d=\"M 29 46 C 35.065 46 40 41.065 40 35 L 40 11 C 40 4.935 35.065 0 29 0 C 22.935 0 18 4.935 18 11 L 18 35 C 18 41.065 22.935 46 29 46 Z M 20 11 C 20 6.037 24.038 2 29 2 C 33.962 2 38 6.037 38 11 L 38 35 C 38 39.963 33.962 44 29 44 C 24.038 44 20 39.963 20 35 L 20 11 Z\"/>\n          </svg>\n        </button>\n        */\n        }\n      </div>\n    </div>\n    );\n  }\n}\n\nexport const Shell = connect(\n  (state: ChatState) => ({\n    // passed down to ShellContainer\n    inputText: state.shell.input,\n    showUploadButton: state.format.showUploadButton,\n    strings: state.format.strings,\n    processingMessage: state.shell.processingMessage,\n    // only used to create helper functions below\n    locale: state.format.locale,\n    user: state.connection.user,\n    listeningState : state.shell.listeningState\n  }), {\n    // passed down to ShellContainer\n    onChangeText: (input: string) => ({ type: 'Update_Input', input, source: \"text\" } as ChatActions),\n    stopListening:  () => ({ type: 'Listening_Stop' }),\n    startListening:  () => ({ type: 'Listening_Starting' }),\n    // only used to create helper functions below\n    sendMessage,\n    showTyping,\n    sendFiles\n  }, (stateProps: any, dispatchProps: any, ownProps: any): Props => ({\n    // from stateProps\n    inputText: stateProps.inputText,\n    showUploadButton: stateProps.showUploadButton,\n    strings: stateProps.strings,\n    listeningState: stateProps.listeningState,\n    processingMessage: stateProps.processingMessage,\n    // from dispatchProps\n    onChangeText: dispatchProps.onChangeText,\n    // helper functions\n    sendMessage: (text: string) => dispatchProps.sendMessage(text, stateProps.user, stateProps.locale),\n    sendFiles: (files: FileList) => dispatchProps.sendFiles(files, stateProps.user, stateProps.locale),\n    showTyping: () => dispatchProps.showTyping(),\n    startListening: () => dispatchProps.startListening(),\n    stopListening: () => dispatchProps.stopListening()\n  }), {\n    withRef: true\n  }\n)(ShellContainer);\n"]}